AC_PREREQ(2.52)

m4_define([rbus_major_version], [0])
m4_define([rbus_minor_version], [0])
m4_define([rbus_micro_version], [2])
m4_define([rbus_version],
          [rbus_major_version.rbus_minor_version.rbus_micro_version])
AC_INIT(rbus, [rbus_version])

# Honor aclocal flags
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE([1.9 tar-ustar])
AC_CONFIG_HEADERS(config.h)

AM_MAINTAINER_MODE

# libtool versioning - this applies to libdbus
#
# See http://sources.redhat.com/autobook/autobook/autobook_91.html#SEC91 for details
#

## increment if the interface has additions, changes, removals.
LT_CURRENT=0

## increment any time the source changes; set to
##  0 if you increment CURRENT
LT_REVISION=0

## increment if any interfaces have been added; set to 0
## if any interfaces have been changed or removed. removal has
## precedence over adding, so set to 0 if both happened.
LT_AGE=0

AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)


AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

RBUS_MAJOR_VERSION=rbus_major_version
RBUS_MINOR_VERSION=rbus_minor_version
RBUS_MICRO_VERSION=rbus_micro_version
RBUS_VERSION=rbus_major_version.rbus_minor_version.rbus_micro_version

AC_SUBST(RBUS_MAJOR_VERSION)
AC_SUBST(RBUS_MINOR_VERSION)
AC_SUBST(RBUS_MICRO_VERSION)
AC_SUBST(RBUS_VERSION)

AC_PROG_CC
AM_PROG_CC_C_O
AC_PROG_CXX
AC_ISC_POSIX
AC_HEADER_STDC
AC_C_INLINE
AM_PROG_LIBTOOL

#### Integer sizes 

AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(void *)
AC_CHECK_SIZEOF(long long)
AC_CHECK_SIZEOF(__int64)

### See what our 64 bit type is called
AC_MSG_CHECKING([64-bit integer type])

case 8 in
$ac_cv_sizeof_int)
  rbusint64=int
  rbusint64_constant='(val)'
  rbusuint64_constant='(val)'
  ;;
$ac_cv_sizeof_long)
  rbusint64=long
  rbusint64_constant='(val##L)'
  rbusuint64_constant='(val##UL)'
  ;;
$ac_cv_sizeof_long_long)
  rbusint64='long long'
  rbusint64_constant='(val##LL)'
  rbusuint64_constant='(val##ULL)'
  ;;
$ac_cv_sizeof___int64)
  rbusint64=__int64
  rbusint64_constant='(val##i64)'
  rbusuint64_constant='(val##ui64)'
  ;;
esac

if test -z "$rbusint64" ; then
        RBUS_INT64_TYPE="no_int64_type_detected"
        RBUS_HAVE_INT64=0
        RBUS_INT64_CONSTANT=
        RBUS_UINT64_CONSTANT=
        AC_MSG_RESULT([none found])
else
        RBUS_INT64_TYPE="$rbusint64"
        RBUS_HAVE_INT64=1
        RBUS_INT64_CONSTANT="$rbusint64_constant"
        RBUS_UINT64_CONSTANT="$rbusuint64_constant"
        AC_MSG_RESULT($RBUS_INT64_TYPE)
fi

AC_SUBST(RBUS_INT64_TYPE)
AC_SUBST(RBUS_INT64_CONSTANT)
AC_SUBST(RBUS_UINT64_CONSTANT)
AC_SUBST(RBUS_HAVE_INT64)


AC_MSG_CHECKING([32-bit integer type])

case 4 in
$ac_cv_sizeof_short)
  rbusint32=int
  ;;
$ac_cv_sizeof_int)
  rbusint32=int
  ;;
$ac_cv_sizeof_long)
  rbusint32=long
  ;;
esac

if test -z "$rbusint32" ; then
        RBUS_INT32_TYPE="no_int32_type_detected"
        AC_MSG_ERROR([No 32-bit integer type found])
else
        RBUS_INT32_TYPE="$rbusint32"
        AC_MSG_RESULT($RBUS_INT32_TYPE)
fi

AC_SUBST(RBUS_INT32_TYPE)


### see what 16-bit int is called
AC_MSG_CHECKING([16-bit integer type])

case 2 in
$ac_cv_sizeof_short)
  rbusint16=short
  ;;
$ac_cv_sizeof_int)
  rbusint16=int
  ;;
esac

if test -z "$rbusint16" ; then
        RBUS_INT16_TYPE="no_int16_type_detected"
        AC_MSG_ERROR([No 16-bit integer type found])
else
        RBUS_INT16_TYPE="$rbusint16"
        AC_MSG_RESULT($RBUS_INT16_TYPE)
fi

AC_SUBST(RBUS_INT16_TYPE)


PKG_CHECK_MODULES(DBUS, dbus-1, have_dbus=true, have_dbus=false)
if ! $have_dbus ; then
	AC_MSG_ERROR([DBus not found.... please include dbus-1-devel above 1.2.0])
fi
AC_SUBST(DBUS_LIBS)
AC_SUBST(DBUS_CFLAGS)

PKG_CHECK_MODULES(LIBXML, libxml-2.0, have_libXML=true, have_libXML=false)
if ! $have_libXML ; then
	AC_MSG_ERROR([libxml2 not found.... please include libxml-2-devel above 2.0])
fi
AC_SUBST(LIBXML_LIBS)
AC_SUBST(LIBXML_CFLAGS)

AC_ARG_ENABLE(verbose-mode, AS_HELP_STRING([--enable-verbose-mode],[Enable verbose mode for debugging]),enable_verbose_mode=$enableval,enable_verbose_mode=$USE_MAINTAINER_MODE)

if test x$enable_verbose_mode = xyes; then
    AC_DEFINE(RBUS_ENABLE_VERBOSE_MODE,1,[Enable verbose mode for debugging])
fi

AC_ARG_ENABLE(, AS_HELP_STRING([--enable-backtrace],[Enable backtrace for debugging]),enable_backtrace=$enableval,enable_backtrace=$USE_MAINTAINER_MODE)
if test x$enable_backtrace = xyes; then
    R_DYNAMIC_LDFLAG=-export-dynamic
else 
    R_DYNAMIC_LDFLAG=""
fi
AC_SUBST(R_DYNAMIC_LDFLAG)


PIC_LDFLAGS="-Wl,-z,relro"
AC_SUBST(PIC_LDFLAGS)

PKG_CHECK_MODULES(GTK2, gtk+-2.0, have_gtk2=true, have_gtk2=false)
if ! $have_gtk2 ; then
        AC_MSG_ERROR([gtk2-devel not found.... please install gtk2-devel above 2.0])
fi
AC_SUBST(GTK2_LIBS)
AC_SUBST(GTK2_CFLAGS)



AC_OUTPUT([
remotebus/include/remotebus-type.h
remotebus/Makefile
tests/Makefile
tools/Makefile
xml/Makefile
Makefile
])


# Checking dbus path 
